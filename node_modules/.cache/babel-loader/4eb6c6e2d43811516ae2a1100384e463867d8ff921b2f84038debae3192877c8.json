{"ast":null,"code":"var _jsxFileName = \"/Users/ageudev_1/Documents/Main Desktop/Estudos/Estudo de Porgramac\\u0327a\\u0303o/Rocketseat/Ignite/learning-folder/rocketseat-ignite_course/reactjs/old-content/chapter-II/dtmoney/src/transactionsContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider(props) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","jsxDEV","_jsxDEV","TransactionsContext","TransactionsProvider","props","_s","transactions","setTransactions","get","then","response","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ageudev_1/Documents/Main Desktop/Estudos/Estudo de Porgramação/Rocketseat/Ignite/learning-folder/rocketseat-ignite_course/reactjs/old-content/chapter-II/dtmoney/src/transactionsContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState, ReactNode } from 'react';\nimport { api } from './services/api';\n\ninterface Transaction {\n  id: number;\n  title: string;\n  amount: number;\n  type: string;\n  category: string;\n  createdAt: string;\n}\n\ninterface TransactionsProviderProps {\n  children: ReactNode\n}\n\nexport const TransactionsContext = createContext<Transaction[]>([]);\n\nexport function TransactionsProvider(props: TransactionsProviderProps) {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  useEffect(() => {\n    api.get('transactions')\n    .then(response => setTransactions(response.data.transactions))\n  }, []);\n\n  return <TransactionsContext.Provider value={transactions}>\n\n  </TransactionsContext.Provider>\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AACrE,SAASC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAerC,OAAO,MAAMC,mBAAmB,gBAAGN,aAAa,CAAgB,EAAE,CAAC;AAEnE,OAAO,SAASO,oBAAoBA,CAACC,KAAgC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EAEnED,SAAS,CAAC,MAAM;IACdE,GAAG,CAACS,GAAG,CAAC,cAAc,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAACL,YAAY,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA,CAACC,mBAAmB,CAACU,QAAQ;IAACC,KAAK,EAAEP;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AACjC;AAACZ,EAAA,CAXeF,oBAAoB;AAAAe,EAAA,GAApBf,oBAAoB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}